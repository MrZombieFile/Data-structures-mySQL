-- MySQL Script generated by MySQL Workbench
-- mar 05 jul 2022 20:50:24
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Youtube` DEFAULT CHARACTER SET utf8 ;
USE `Youtube` ;

-- -----------------------------------------------------
-- Table `Youtube`.`codi postal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`codi postal` (
  `idcodi postal` INT NOT NULL AUTO_INCREMENT,
  `codi postal` VARCHAR(60) NULL,
  PRIMARY KEY (`idcodi postal`),
  UNIQUE INDEX `idcodi postal_UNIQUE` (`idcodi postal` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`usuari`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`usuari` (
  `idusuari` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(100) NULL,
  `password` VARCHAR(40) NULL,
  `nom usuari` VARCHAR(60) NULL,
  `data naixement` DATE NULL,
  `codi postal_idcodi postal` INT NOT NULL,
  PRIMARY KEY (`idusuari`),
  UNIQUE INDEX `idusuari_UNIQUE` (`idusuari` ASC) VISIBLE,
  INDEX `fk_usuari_codi postal1_idx` (`codi postal_idcodi postal` ASC) VISIBLE,
  CONSTRAINT `fk_usuari_codi postal1`
    FOREIGN KEY (`codi postal_idcodi postal`)
    REFERENCES `Youtube`.`codi postal` (`idcodi postal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`canal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`canal` (
  `idcanal` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(60) NULL,
  `descripcio` MEDIUMTEXT NULL,
  `data_de_creacio` DATETIME NOT NULL,
  `usuari_idusuari` INT NOT NULL,
  PRIMARY KEY (`idcanal`, `usuari_idusuari`),
  UNIQUE INDEX `idcanal_UNIQUE` (`idcanal` ASC) VISIBLE,
  INDEX `fk_canal_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  CONSTRAINT `fk_canal_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`video` (
  `idvideo` INT NOT NULL AUTO_INCREMENT,
  `usuari_idusuari` INT NOT NULL,
  `data _i_hora` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `titol` VARCHAR(60) NULL,
  `descripcio` MEDIUMTEXT NULL,
  `grandaria` FLOAT NULL,
  `nom de l'arxiu` VARCHAR(100) NULL,
  `durada` FLOAT NULL,
  `thumbnail` BLOB NULL,
  `reproduccions` INT(12) NULL,
  `likes` INT(12) NULL,
  `dislikes` INT(10) NULL,
  `canal_idcanal` INT NOT NULL,
  `canal_usuari_idusuari1` INT NOT NULL,
  PRIMARY KEY (`idvideo`, `usuari_idusuari`, `canal_idcanal`, `canal_usuari_idusuari1`),
  UNIQUE INDEX `idvideo_UNIQUE` (`idvideo` ASC) VISIBLE,
  INDEX `fk_video_usuari_idx` (`usuari_idusuari` ASC) VISIBLE,
  INDEX `fk_video_canal1_idx` (`canal_idcanal` ASC, `canal_usuari_idusuari1` ASC) VISIBLE,
  CONSTRAINT `fk_video_usuari`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_canal1`
    FOREIGN KEY (`canal_idcanal` , `canal_usuari_idusuari1`)
    REFERENCES `Youtube`.`canal` (`idcanal` , `usuari_idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`estat del video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`estat del video` (
  `idvideo state` INT NOT NULL AUTO_INCREMENT,
  `estat del video` VARCHAR(6) NULL,
  `video_idvideo` INT NOT NULL,
  `video_usuari_idusuari` INT NOT NULL,
  `video_canal_idcanal` INT NOT NULL,
  `video_canal_usuari_idusuari1` INT NOT NULL,
  PRIMARY KEY (`idvideo state`),
  UNIQUE INDEX `idvideo state_UNIQUE` (`idvideo state` ASC) VISIBLE,
  INDEX `fk_estat del video_video1_idx` (`video_idvideo` ASC, `video_usuari_idusuari` ASC, `video_canal_idcanal` ASC, `video_canal_usuari_idusuari1` ASC) VISIBLE,
  CONSTRAINT `fk_estat del video_video1`
    FOREIGN KEY (`video_idvideo` , `video_usuari_idusuari` , `video_canal_idcanal` , `video_canal_usuari_idusuari1`)
    REFERENCES `Youtube`.`video` (`idvideo` , `usuari_idusuari` , `canal_idcanal` , `canal_usuari_idusuari1`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`etiquetes video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`etiquetes video` (
  `idetiquetes video` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(60) NULL,
  `video_idvideo` INT NOT NULL,
  `video_usuari_idusuari` INT NOT NULL,
  PRIMARY KEY (`idetiquetes video`, `video_idvideo`, `video_usuari_idusuari`),
  UNIQUE INDEX `idetiquetes video_UNIQUE` (`idetiquetes video` ASC) VISIBLE,
  INDEX `fk_etiquetes video_video1_idx` (`video_idvideo` ASC, `video_usuari_idusuari` ASC) VISIBLE,
  CONSTRAINT `fk_etiquetes video_video1`
    FOREIGN KEY (`video_idvideo` , `video_usuari_idusuari`)
    REFERENCES `Youtube`.`video` (`idvideo` , `usuari_idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`sexe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`sexe` (
  `idsexe` INT NOT NULL AUTO_INCREMENT,
  `sexe` VARCHAR(25) NULL,
  `usuari_idusuari` INT NOT NULL,
  PRIMARY KEY (`idsexe`),
  UNIQUE INDEX `idsexe_UNIQUE` (`idsexe` ASC) VISIBLE,
  INDEX `fk_sexe_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  CONSTRAINT `fk_sexe_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`pais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`pais` (
  `idpais` INT NOT NULL AUTO_INCREMENT,
  `nom pais` VARCHAR(60) NULL,
  `usuari_idusuari` INT NOT NULL,
  PRIMARY KEY (`idpais`),
  UNIQUE INDEX `idpais_UNIQUE` (`idpais` ASC) VISIBLE,
  INDEX `fk_pais_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  CONSTRAINT `fk_pais_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`likes to videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`likes to videos` (
  `idlikes` INT NOT NULL AUTO_INCREMENT,
  `like` BINARY(1) NULL,
  `dislike` BINARY(1) NULL,
  `data _i_hora` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `video_idvideo` INT NOT NULL,
  `video_usuari_idusuari` INT NOT NULL,
  PRIMARY KEY (`idlikes`),
  UNIQUE INDEX `idlikes_UNIQUE` (`idlikes` ASC) VISIBLE,
  INDEX `fk_likes to videos_video1_idx` (`video_idvideo` ASC, `video_usuari_idusuari` ASC) VISIBLE,
  CONSTRAINT `fk_likes to videos_video1`
    FOREIGN KEY (`video_idvideo` , `video_usuari_idusuari`)
    REFERENCES `Youtube`.`video` (`idvideo` , `usuari_idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`subscripcions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`subscripcions` (
  `idsubscripcions a canals` INT NOT NULL AUTO_INCREMENT,
  `canal_idcanal` INT NOT NULL,
  PRIMARY KEY (`idsubscripcions a canals`),
  UNIQUE INDEX `idsubscripcions a canals_UNIQUE` (`idsubscripcions a canals` ASC) VISIBLE,
  INDEX `fk_subscripcions a canals_canal1_idx` (`canal_idcanal` ASC) VISIBLE,
  CONSTRAINT `fk_subscripcions a canals_canal1`
    FOREIGN KEY (`canal_idcanal`)
    REFERENCES `Youtube`.`canal` (`idcanal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`usuari_has_subscripcions a canals`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`usuari_has_subscripcions a canals` (
  `usuari_idusuari` INT NOT NULL,
  `subscripcions a canals_idsubscripcions a canals` INT NOT NULL,
  PRIMARY KEY (`usuari_idusuari`, `subscripcions a canals_idsubscripcions a canals`),
  INDEX `fk_usuari_has_subscripcions a canals_subscripcions a canals_idx` (`subscripcions a canals_idsubscripcions a canals` ASC) VISIBLE,
  INDEX `fk_usuari_has_subscripcions a canals_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  CONSTRAINT `fk_usuari_has_subscripcions a canals_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuari_has_subscripcions a canals_subscripcions a canals1`
    FOREIGN KEY (`subscripcions a canals_idsubscripcions a canals`)
    REFERENCES `Youtube`.`subscripcions` (`idsubscripcions a canals`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`playlist` (
  `idpl` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(60) NULL,
  `estat` BINARY(1) NULL,
  `data_de_creacio` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `usuari_idusuari1` INT NOT NULL,
  PRIMARY KEY (`idpl`),
  UNIQUE INDEX `idpl_UNIQUE` (`idpl` ASC) VISIBLE,
  INDEX `fk_playlist_usuari1_idx` (`usuari_idusuari1` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_usuari1`
    FOREIGN KEY (`usuari_idusuari1`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`pl_has_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`pl_has_video` (
  `pl_idpl` INT NOT NULL,
  `video_idvideo` INT NOT NULL,
  `video_usuari_idusuari` INT NOT NULL,
  PRIMARY KEY (`pl_idpl`, `video_idvideo`, `video_usuari_idusuari`),
  INDEX `fk_pl_has_video_video1_idx` (`video_idvideo` ASC, `video_usuari_idusuari` ASC) VISIBLE,
  INDEX `fk_pl_has_video_pl1_idx` (`pl_idpl` ASC) VISIBLE,
  CONSTRAINT `fk_pl_has_video_pl1`
    FOREIGN KEY (`pl_idpl`)
    REFERENCES `Youtube`.`playlist` (`idpl`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pl_has_video_video1`
    FOREIGN KEY (`video_idvideo` , `video_usuari_idusuari`)
    REFERENCES `Youtube`.`video` (`idvideo` , `usuari_idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`estat playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`estat playlist` (
  `idestat playlist` INT NOT NULL AUTO_INCREMENT,
  `estat` VARCHAR(45) NULL,
  `playlist_idpl` INT NOT NULL,
  PRIMARY KEY (`idestat playlist`, `playlist_idpl`),
  UNIQUE INDEX `idestat playlist_UNIQUE` (`idestat playlist` ASC) VISIBLE,
  INDEX `fk_estat playlist_playlist1_idx` (`playlist_idpl` ASC) VISIBLE,
  CONSTRAINT `fk_estat playlist_playlist1`
    FOREIGN KEY (`playlist_idpl`)
    REFERENCES `Youtube`.`playlist` (`idpl`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`comentaris`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`comentaris` (
  `idcomentaris` INT NOT NULL AUTO_INCREMENT,
  `cos del comentari` MEDIUMTEXT NULL,
  `data _i_hora` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `video_idvideo` INT NOT NULL,
  `video_usuari_idusuari` INT NOT NULL,
  PRIMARY KEY (`idcomentaris`),
  UNIQUE INDEX `idcomentaris_UNIQUE` (`idcomentaris` ASC) VISIBLE,
  INDEX `fk_comentaris_video1_idx` (`video_idvideo` ASC, `video_usuari_idusuari` ASC) VISIBLE,
  CONSTRAINT `fk_comentaris_video1`
    FOREIGN KEY (`video_idvideo` , `video_usuari_idusuari`)
    REFERENCES `Youtube`.`video` (`idvideo` , `usuari_idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`usuari_has_comentari`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`usuari_has_comentari` (
  `comentaris_idcomentaris` INT NOT NULL,
  `usuari_idusuari` INT NOT NULL,
  PRIMARY KEY (`comentaris_idcomentaris`, `usuari_idusuari`),
  INDEX `fk_likes a comentaris_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  CONSTRAINT `fk_likes a comentaris_comentaris1`
    FOREIGN KEY (`comentaris_idcomentaris`)
    REFERENCES `Youtube`.`comentaris` (`idcomentaris`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_likes a comentaris_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`likes a comentaris`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`likes a comentaris` (
  `idlikes a comentaris` INT NOT NULL AUTO_INCREMENT,
  `comentaris_idcomentaris` INT NOT NULL,
  PRIMARY KEY (`idlikes a comentaris`),
  UNIQUE INDEX `idlikes a comentaris_UNIQUE` (`idlikes a comentaris` ASC) VISIBLE,
  INDEX `fk_likes a comentaris_comentaris2_idx` (`comentaris_idcomentaris` ASC) VISIBLE,
  CONSTRAINT `fk_likes a comentaris_comentaris2`
    FOREIGN KEY (`comentaris_idcomentaris`)
    REFERENCES `Youtube`.`comentaris` (`idcomentaris`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
